# create 10,000 folders
from pathlib import Path
for i in range(1,10001):
    Path(r"C:\Users\murra\OneDrive - Umich\WebscrapingOutput_F\Babylonian\Number_{}".format(i)).mkdir(parents=True, exist_ok=True)
    
    
# make jupyter notebook wider
from IPython.core.display import display, HTML
display(HTML("<style>.container { width:100% !important; }</style>"))

# imports
import time
import pandas as pd
import csv

from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import Select
from selenium.webdriver.support.ui import WebDriverWait

from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait 
from selenium.webdriver.support import expected_conditions as EC

import urllib.request

# selenium setup
driver_path = r'C:\Users\murra\OneDrive - Umich\XPS\Documents_XPS\chromedriver.exe'
driver = webdriver.Chrome(executable_path=driver_path)

# data source for Babylonian Numerals
url = 'https://www.easycalculation.com/funny/numerals/babylonian-numbers.php?'

page = driver.get(url)

time.sleep(7)

# download all individual numerals for each number as images to each of 10,000 folders
for i in range(1,10001):
    try:
        
        driver.find_element_by_xpath('//*[@id="i1"]').clear()
        # enters in /types in words
        driver.find_element_by_xpath('//*[@id="i1"]').click()
        driver.find_element_by_xpath('//*[@id="i1"]').send_keys(str(i))
        #time.sleep(4)
        #driver.find_element_by_xpath('//*[@id="dispCalcConts"]/div[3]/input[1]').click()
        time.sleep(1)
        img_num = 0
        while True:
            img_num += 1
            try: 
                img = driver.find_element_by_xpath('//*[@id="r1"]/table/tbody/tr/td[2]/img[{}]'.format(img_num))
                src = img.get_attribute('src')
                # download the image
                #urllib.request.urlretrieve(src,r"C:\Users\murra\OneDrive - Umich\WebscrapingOutput_F\Babylonian\Number_{0}\Unicode_Output_img_{1}.png".format(i,img_num))
            
            #print exception
            except:
                break

    #print exception
    except Exception as e:
        print(e)


import glob
from IPython.display import Image, display

# Enter number you would like convertered into a Babylonian numeral here:
number = 6100

# outputs Babylonian numeral here:
for imageName in glob.glob(r"C:\Users\murra\OneDrive - Umich\WebscrapingOutput_F\Babylonian\Number_{}\*.PNG".format(number)):

    display(Image(filename=imageName))
    #print(imageName)
